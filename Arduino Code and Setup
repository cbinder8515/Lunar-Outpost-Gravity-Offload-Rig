
/*
  Reading the one and two axis flex sensors from Bend Labs
  By: Nathan Seidle @ SparkFun Electronics
  Date: March 2nd, 2019
  License: This code is public domain but you buy me a beer if you use this
  and we meet someday (Beerware license).
  This example reads the flex values of the single or
  dual axis angular bend sensor (ADS)
  SparkFun labored with love to create this code. Feel like supporting open
  source? Buy a sensor from SparkFun!
  https://www.sparkfun.com/products/15245 (2-axis sensor)
  https://www.sparkfun.com/products/15244 (1-axis sensor)
  Hardware Connections:
  Use the SparkFun Qwiic Breadboard Jumper (https://www.sparkfun.com/products/14425)
  to connect to the RedBoard Qwiic and the following pins on the ADS:
  SCL: Yellow wire on Qwiic cable
  SDA: Blue
  VCC: Red
  GND: Black
  Single axis pinout: https://cdn.sparkfun.com/assets/9/f/8/2/d/Bendlabs_Single_Axis_Flex_Sensor_Pinout.png
  Dual axis pintout: https://cdn.sparkfun.com/assets/f/f/9/e/6/Bendlabs_Dual_Axis_Flex_Sensor_Pinout.png

  Open the serial monitor at 115200 baud to see the output
*/
#include <Wire.h>
#include "SparkFun_Displacement_Sensor_Arduino_Library.h" // Click here to get the library: http://librarymanager/All#SparkFun_Displacement_Sensor

#define SLAVE_ADDRESS 0x04
//pins:

ADS myFlexSensor; //Create instance of the ADS class

int i = 0;
double xAngle;
double yAngle;

byte deviceType; //Keeps track of if this sensor is a one axis of two axis sensor

void setup()
{

  Serial.begin(9600);
  while (!Serial);
  Serial.println("SparkFun Displacement Sensor Example");

  Wire.begin(SLAVE_ADDRESS);


  if (myFlexSensor.begin() == false) //check if flex sensor is wired
  {
    Serial.println(F("No sensor detected. Check wiring. Freezing..."));
    while (1);
  }

  deviceType = myFlexSensor.getDeviceType();
  // check if sensor is one axis or 2D (in our case should always be 2D
  if (deviceType == ADS_ONE_AXIS)
    Serial.println(F("One axis displacement sensor detected"));
  else if (deviceType == ADS_TWO_AXIS) 
    Serial.println(F("Two axis displacement sensor detected"));
  // Press c to start calibration
  Serial.println(F("Press 'c' for calibration"));
  Wire.begin(SLAVE_ADDRESS);
  // define callbacks for i2c communication
  Serial.println();
  Serial.println("Starting...");
}


void loop()
{
  if (myFlexSensor.available() == true)
  {
    xAngle = myFlexSensor.getX(); //read x angle
    yAngle = myFlexSensor.getY(); //read y angle
    // print angles in x,y format
    Serial.print(xAngle);
    Serial.print(",");
    Serial.print(yAngle);
    Serial.println();
  }

  delay(100);

  if (Serial.available())
  {
    byte incoming = Serial.read();
   // at anytime 'c' is pressed we go into calibration routine
    if (incoming == 'c')
      calibrate();
  }

}


  void calibrate()
  {
    Serial.println(F("Calibration routine"));

    while (Serial.available() > 0)
      Serial.read(); //Flush all characters
    // put flex sensor where you want absolute zero to be defined as (straight up and down likely) and then press any key to set
    Serial.println(F("Press a key when the sensor is straight up and down"));
    while (Serial.available() == 0)
    {
      myFlexSensor.available();
      delay(10); //Wait for user to press character
    }

    myFlexSensor.calibrateZero(); //Call when sensor is straight on both axis

    if (deviceType == ADS_TWO_AXIS)
    {
      while (Serial.available() > 0)
        Serial.read(); //Flush all characters
      Serial.println(F("Good. Now press a key when the sensor is 0 degrees on the x axis and 5 degrees along Y axis"));
      while (Serial.available() == 0)
      {
        myFlexSensor.available();
        delay(10); //Wait for user to press character
      }

      myFlexSensor.calibrateY(); //Call when sensor is straight on Y axis and 90 degrees on X axis
    }

    while (Serial.available() > 0)
      Serial.read(); //Flush all characters
    Serial.println(F("Good. Now press a key when the sensor is 0 degrees on the y axis and 5 degrees along X axis"));
    while (Serial.available() == 0)
    {
      myFlexSensor.available();
      delay(10); //Wait for user to press character
    }

    myFlexSensor.calibrateX(); //Call when sensor is straight on Y axis and 90 degrees on X axis

    Serial.println(F("Calibration complete."));
  }
